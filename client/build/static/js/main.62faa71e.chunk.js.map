{"version":3,"sources":["components/GameLink.js","components/Home.js","components/historyLink.js","components/HistoryPopup.js","components/History.js","components/GameResults.js","components/ColorPallete.js","components/GameCanvas.js","components/StoryScreen.js","components/SendInviteModal.js","components/GameScreen.js","components/InviteModal.js","components/Login.js","App.js","serviceWorker.js","js/usersStore.js","js/historyStore.js","index.js"],"names":["GameLink","inject","allStores","newRoom","usersStore","_this","props","gameType","react_default","a","createElement","className","id","this","alt","src","Link","onClick","to","link","Component","Home","currentUser","socket","getDrawings","historyStore","getStories","setUser","saveTheme","observer","on","userName","word","components_GameLink","HistoryLink","displayPopup","renderDrawing","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","drawing","sequences","Symbol","iterator","next","done","i","value","x","y","isNewLine","color","draw","err","return","ctx","refs","historyCanvas","getContext","closePath","beginPath","moveTo","strokeStyle","arc","Math","PI","stroke","yPosition","xPosition","renderStory","story","text","write","letter","index","font","fillText","canvas","width","height","style","ref","GameResults","itemToDisplay","length","requestAnimationFrame","observable","History","drawings","stories","map","d","historyLink","key","_id","s","HistoryPopup","finalProduct","finalize","resultCanvas","console","log","ColorPallete","changeColor","e","target","backgroundColor","colorsRender","colors","c","GameCanvas","update","yourTurn","startTurn","finalProductSet","currentPlayers","updateSequence","stopTimer","newLine","mouseMove","getPos","pressed","_this2","setGameState","display","gameinProgress","onTouchMove","onTouchEnd","mouseUp","onTouchStart","mouseDown","onMouseMove","onMouseUp","onMouseDown","components_ColorPallete","action","_this3","_this4","_this5","bounds","getBoundingClientRect","pageX","left","pageY","top","StoryScreen","getPlayers","pass","yPositions","showKey","previosKey","handleInpt","name","arr","displayError","sentenceInp","onChange","placeholder","keyInp","send","emit","timout","setTimeout","SendInvite","invite","visibility","bool","handleInput","username","type","cancle","inv","GameScreen","start","finish","timer","resetVariables","themeWord","startGame","match","params","gameEnded","renderGameBoard","components_GameCanvas","components_StoryScreen","components_GameResults","p","classNane","SendInviteModal","InviteModal","setType","roomId","roomType","recieveInvite","pending","accept","decline","room","Login","loginValidate","validateLogin","signup","signUp","logIn","displayMessage","currentMessage","confirmPassword","singupPassword","singupUsername","password","login","loginUsername","loginPassword","user","App","logOut","BrowserRouter","components_InviteModal","components_Login","Route","exact","path","component","render","components_History","_ref","components_GameScreen","Boolean","window","location","hostname","gametype","newDrawing","newStory","axios","post","then","data","clearTimeout","timeOut","io","connect","_this6","push","_this7","countDown","_this8","_this9","_this10","_this11","_this12","_this13","_this14","_this15","_this16","_this17","_this18","get","ReactDOM","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62faa71e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { inject } from 'mobx-react';\r\nimport '../styles/btn.css'\r\nimport '../styles/home.css'\r\n\r\n@inject(allStores => ({\r\n    newRoom: allStores.usersStore.newRoom\r\n}))\r\nclass GameLink extends Component {\r\n\r\n    newRoom = () => {\r\n        this.props.newRoom(this.props.gameType);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"game-link\" id={this.props.gameType}>\r\n                <span className=\"game-title\">{this.props.gameType}</span> <br />\r\n                <img className=\"image-link\" alt=\"game\" src={this.props.src} />\r\n                <p className=\"description\">\r\n                    {this.props.gameType === \"drawing\" ? \"In this game you will draw a shared drawing with your freinds.\" : \"In this game you can write a continued story with all of you freinds\"}\r\n                </p>\r\n                <div className=\"btn-holder\">\r\n                    <Link onClick={this.newRoom} to={this.props.link}>\r\n                        <div className=\"button\">\r\n                            <p className=\"btnText\">PLAY NOW</p>\r\n                            <div className=\"btnTwo play\">\r\n                                <p className=\"btnText2\">\r\n                                    <div className=\"play-img\"></div>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameLink;","import React, { Component } from 'react';\r\nimport GameLink from './GameLink';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../styles/home.css'\r\n\r\n@inject(allStores => ({\r\n    currentUser: allStores.usersStore.currentUser,\r\n    socket: allStores.usersStore.socket,\r\n    getDrawings: allStores.historyStore.getDrawings,\r\n    getStories: allStores.historyStore.getStories,\r\n    setUser: allStores.historyStore.setUser,\r\n    saveTheme: allStores.usersStore.saveTheme\r\n}))\r\n@observer\r\nclass Home extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.socket.on('get drawings', () => {\r\n            this.props.getDrawings(this.props.currentUser.userName)\r\n        })\r\n\r\n        this.props.socket.on('get stories', () => {\r\n            this.props.getStories(this.props.currentUser.userName)\r\n        })\r\n\r\n        this.props.socket.on('themeWord', (word) => {\r\n            this.props.saveTheme(word)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"title\">\r\n                    <h2 className=\"home-title\">Nonsense</h2>\r\n                    <p className=\"description\">\r\n                        This is an app with all the nonsense you need.\r\n                    </p>\r\n                </div>\r\n                    <GameLink src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQDbEdqKqmQOuY5bTmcVA-sEOHsWFqM_asYBIYEcypabLO5QIo0g\" link=\"/game/drawing\" gameType=\"drawing\" />\r\n                    <GameLink src=\"http://www.thestory.org/sites/default/themes/siteskin/inc/images/podcast-600.png\" link=\"/game/story\" gameType=\"story\" />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { inject } from 'mobx-react';\r\n\r\n@inject(allStores => ({\r\n    displayPopup: allStores.historyStore.displayPopup\r\n}))\r\n\r\n\r\nclass HistoryLink extends Component {\r\n\r\n    componentDidMount() {\r\n        const canvas = this.refs.historyCanvas\r\n        canvas.width = 1024;\r\n        canvas.height = 1024;\r\n        canvas.style.width = \"200px\";\r\n        canvas.style.height = \"200px\";\r\n        switch (this.props.gameType) {\r\n            case \"drawing\":\r\n                this.renderDrawing();\r\n                break;\r\n            case \"story\":\r\n                this.renderStory()\r\n                break;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    renderDrawing = () => {\r\n        for (let i of this.props.drawing.sequences) {\r\n            let x = i.x;\r\n            let y = i.y;\r\n            let isNewLine = i.isNewLine;\r\n            let color = i.color;\r\n            this.draw(x, y, isNewLine, color);\r\n        }\r\n    }\r\n\r\n    draw = (x, y, isNewLine, color) => {\r\n        const ctx = this.refs.historyCanvas.getContext('2d');\r\n        if (isNewLine) {\r\n            ctx.closePath();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n        }\r\n        ctx.strokeStyle = color;\r\n        ctx.arc(x, y, 0.25, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    yPosition = 50;\r\n    xPosition = 10;\r\n    \r\n    renderStory = () => {\r\n        for (let i in this.props.story.text) {\r\n            this.write(this.props.story.text[i], i)\r\n            this.xPosition += 8;\r\n        }\r\n    }\r\n\r\n    write = (letter, index) => {\r\n        const ctx = this.refs.historyCanvas.getContext('2d');\r\n        if (index === 0) {\r\n            ctx.font = \"30px floralCapitals\";\r\n        } else {\r\n            ctx.font = \"30px crawley\"\r\n        }\r\n        if (letter === '.' || letter === ',') {\r\n            ctx.fillText(letter, this.xPosition, this.yPosition);\r\n            this.yPosition += 40;\r\n            this.xPosition = 10;\r\n        } else {\r\n            ctx.fillText(letter, this.xPosition, this.yPosition);\r\n        }\r\n    }\r\n\r\n    displayPopup = () => {\r\n        switch (this.props.gameType) {\r\n            case \"drawing\":\r\n                this.props.displayPopup(this.props.drawing, this.props.gameType)\r\n                break;\r\n            case \"story\":\r\n                this.props.displayPopup(this.props.story, this.props.gameType)\r\n                break;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"HistoryLink\">\r\n                <button onClick={this.displayPopup}>\r\n                    <canvas className=\"drawing-field\" ref=\"historyCanvas\" />\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HistoryLink;","import React, { Component } from 'react';\r\nimport '../styles/popup.css';\r\nimport '../styles/canvasPopup.css';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\n@inject(allStores => ({\r\n    displayPopup: allStores.historyStore.displayPopup,\r\n    gameType: allStores.historyStore.gameType,\r\n    itemToDisplay: allStores.historyStore.itemToDisplay\r\n}))\r\n\r\n@observer\r\nclass GameResults extends Component {\r\n\r\n    @observable i = 0;\r\n\r\n    @observable canvas = undefined;\r\n\r\n    componentDidMount() {\r\n        this.canvas = this.refs.historyCanvas\r\n        this.canvas.width = 1024;\r\n        this.canvas.height = 1024;\r\n\r\n        if (this.props.itemToDisplay) {\r\n            switch (this.props.gameType) {\r\n                case \"drawing\":\r\n                    this.renderDrawing();\r\n                    break;\r\n                case \"story\":\r\n                    this.renderStory()\r\n                    break;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderDrawing = () => {\r\n        if (this.props.itemToDisplay.sequences[0] === undefined) { return }\r\n        if (this.i < this.props.itemToDisplay.sequences.length - 1) { requestAnimationFrame(this.renderDrawing) }\r\n        let x = this.props.itemToDisplay.sequences[this.i].x;\r\n        let y = this.props.itemToDisplay.sequences[this.i].y;\r\n        let isNewLine = this.props.itemToDisplay.sequences[this.i].isNewLine;\r\n        let color = this.props.itemToDisplay.sequences[this.i].color;\r\n        this.draw(x, y, isNewLine, color);\r\n        this.i++;\r\n    }\r\n\r\n    draw = (x, y, isNewLine, color) => {\r\n        const ctx = this.canvas.getContext('2d');\r\n        if (isNewLine) {\r\n            ctx.closePath();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n        }\r\n        ctx.strokeStyle = color;\r\n\r\n        ctx.arc(x, y, 0.25, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    yPosition = 30;\r\n    xPosition = 10;\r\n\r\n    renderStory = () => {\r\n        if (this.props.itemToDisplay.text[0] === undefined) { return }\r\n        if (this.i < this.props.itemToDisplay.text.length - 1) { requestAnimationFrame(this.renderStory) }\r\n        this.write(this.props.itemToDisplay.text[this.i])\r\n        this.xPosition += 15;\r\n        this.i++\r\n    }\r\n\r\n    write = (letter) => {\r\n        const ctx = this.canvas.getContext('2d');\r\n        if (this.i === 0) {\r\n            ctx.font = \"20pt appFont\";\r\n        } else {\r\n            ctx.font = \"20pt appFont\"\r\n        }\r\n        if (letter === '.' || letter === ',' || letter === '!' || letter === '?') {\r\n            ctx.fillText(letter, this.xPosition, this.yPosition);\r\n            this.yPosition += 30;\r\n            this.xPosition = 10;\r\n        } else {\r\n            ctx.fillText(letter, this.xPosition, this.yPosition);\r\n        }\r\n    }\r\n\r\n    displayPopup = () => {\r\n        this.props.displayPopup(null)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"modal-content canvas-modal\">\r\n                    <canvas className=\"drawing-field\" id=\"popup-canvas\" ref=\"historyCanvas\" />\r\n                    {/* <button onClick={this.displayPopup}>close</button> */}\r\n\r\n                    <div className=\"btn-holder\" onClick={this.displayPopup}>\r\n                            <div className=\"button cancle\">\r\n                                <p className=\"btnText\">CLOSE</p>\r\n                                <div className=\"btnTwo cancle2\">\r\n                                    <p className=\"btnText2\"> <div className=\"cancle-img\"></div></p>\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameResults;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport HistoryLink from './historyLink';\r\nimport HistoryPopup from './HistoryPopup'\r\nimport '../styles/history.css'\r\n\r\n@inject(allStores => ({\r\n    drawings: allStores.historyStore.drawings,\r\n    stories: allStores.historyStore.stories,\r\n    itemToDisplay: allStores.historyStore.itemToDisplay,\r\n}))\r\n\r\n@observer\r\nclass History extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"History\">\r\n                <h4>MY DRAWINGS:</h4>\r\n                <div className=\"history-items\">\r\n                    {this.props.drawings.map(d => { return <HistoryLink key={d._id} drawing={d} gameType=\"drawing\" /> })}\r\n                </div>\r\n                <h4>MY STORIES:</h4>\r\n                <div className=\"history-items\">\r\n                    {this.props.stories.map(s => { return <HistoryLink key={s._id} story={s} gameType=\"story\" /> })}\r\n                </div>\r\n                {this.props.itemToDisplay ? <HistoryPopup /> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default History;","import React, { Component } from 'react';\r\nimport '../styles/popup.css';\r\nimport '../styles/canvasPopup.css';\r\nimport '../styles/btn.css';\r\nimport '../styles/gameResults.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\n@inject(allStores => ({\r\n    finalProduct: allStores.usersStore.finalProduct,\r\n    finalize: allStores.usersStore.finalize,\r\n    gameType: allStores.usersStore.gameType\r\n}))\r\n@observer\r\nclass GameResults extends Component {\r\n\r\n    @observable i = 0;\r\n\r\n    @observable resultCanvas = undefined;\r\n\r\n    yPosition = 50;\r\n    xPosition = 10;\r\n\r\n    componentDidMount() {\r\n        if (this.refs.resultCanvas) {\r\n            this.resultCanvas = this.refs.resultCanvas\r\n            this.resultCanvas.width = 1024;\r\n            this.resultCanvas.height = 1024;\r\n\r\n            switch (this.props.gameType) {\r\n                case \"drawing\":\r\n                    this.renderDrawing();\r\n                    break;\r\n                case \"story\":\r\n                    this.renderStory()\r\n                    break;\r\n                default: return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    renderDrawing = () => {\r\n        if (this.i < this.props.finalProduct.length - 1) { requestAnimationFrame(this.renderDrawing) }\r\n        let x = this.props.finalProduct[this.i].x;\r\n        let y = this.props.finalProduct[this.i].y;\r\n        let isNewLine = this.props.finalProduct[this.i].isNewLine;\r\n        let color = this.props.finalProduct[this.i].color;\r\n        this.draw(x, y, isNewLine, color);\r\n        this.i++;\r\n    }\r\n\r\n    draw = (x, y, isNewLine, color) => {\r\n        const ctx = this.resultCanvas.getContext('2d');\r\n        if (isNewLine) {\r\n            ctx.closePath();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n        }\r\n        ctx.strokeStyle = color;\r\n        ctx.arc(x, y, 0.25, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    renderStory = () => {\r\n        if (this.i < this.props.finalProduct.length - 1) { requestAnimationFrame(this.renderStory) }\r\n        console.log(this.props.finalProduct[this.i]);\r\n        this.write(this.props.finalProduct[this.i])\r\n        this.xPosition += 8;\r\n        this.i++\r\n    }\r\n\r\n    write = (letter) => {\r\n        const ctx = this.resultCanvas.getContext('2d');\r\n        if (this.i === 0) {\r\n            ctx.font = \"30px floralCapitals\";\r\n        } else {\r\n            ctx.font = \"30px crawley\"\r\n        }\r\n        if (letter === '.' || letter === ',') {\r\n            ctx.fillText(letter, this.xPosition, this.yPosition);\r\n            this.yPosition += 40;\r\n            this.xPosition = 10;\r\n        } else {\r\n            ctx.fillText(letter, this.xPosition, this.yPosition);\r\n        }\r\n    }\r\n\r\n    finalize = () => {\r\n        this.props.finalize()\r\n    }\r\n\r\n    // renderFinal = () => {\r\n    //     switch (this.props.gameType) {\r\n    //         case \"drawing\":\r\n    //             return <canvas className=\"drawing-field\" ref=\"resultCanvas\" />;\r\n    //         case \"story\":\r\n    //             return <div className=\"story-field\">{this.renderStory}</div>;\r\n    //         default:\r\n    //             return null;\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"popup\">\r\n                <div className=\"modal-content canvas-modal\">\r\n                    <canvas className=\"drawing-field\" id=\"popup-canvas\" ref=\"resultCanvas\" />\r\n\r\n                    <div className=\"btn-holder\" onClick={this.finalize}>\r\n                        <Link to=\"/\">\r\n                            <div className=\"button\">\r\n                                <p className=\"btnText\">HOME</p>\r\n                                <div className=\"btnTwo\">\r\n                                    <p className=\"btnText2\"> <div className=\"home-img\"></div></p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    </div>\r\n                </div >\r\n                )\r\n            }\r\n        }\r\n        \r\nexport default GameResults;","import React, { Component } from 'react';\r\nimport { inject } from 'mobx-react';\r\nimport { observable } from 'mobx';\r\n\r\n@inject(allStores => ({\r\n    changeColor: allStores.usersStore.changeColor\r\n}))\r\nclass ColorPallete extends Component {\r\n\r\n    @observable colors = [\"rgba(0, 0, 0, 1)\", \"rgba(212, 23, 23, 1)\", \"rgba(227, 122, 10, 1)\", \"rgba(227, 227, 21, 1)\", \"rgba(107, 226, 25, 1)\", \"rgba(25, 226, 95, 1)\", \"rgba(25, 226, 189, 1)\", \"rgba(25, 95, 226, 1)\", \"rgba(188, 19, 222, 1)\", \"rgba(243, 44, 123, 1)\"]\r\n\r\n    changeColor = (e) => {\r\n        this.props.changeColor(e.target.style.backgroundColor);\r\n    }\r\n\r\n    colorsRender = () => {\r\n        return this.colors.map(c => {\r\n            return <div onClick={this.changeColor} style={{ backgroundColor: c }} className=\"color\"></div>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-pallete\">\r\n                {this.colorsRender()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ColorPallete;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport '../styles/canvas.css'\r\nimport ColorPallete from './ColorPallete';\r\n\r\n@inject(allStores => ({\r\n    update: allStores.usersStore.update,\r\n    socket: allStores.usersStore.socket,\r\n    yourTurn: allStores.usersStore.yourTurn,\r\n    startTurn: allStores.usersStore.startTurn,\r\n    finalProductSet: allStores.usersStore.finalProductSet,\r\n    currentPlayers: allStores.usersStore.currentPlayers,\r\n    currentUser: allStores.usersStore.currentUser,\r\n    updateSequence: allStores.usersStore.updateSequence,\r\n    stopTimer: allStores.usersStore.stopTimer,\r\n    color: allStores.usersStore.color,\r\n    getDrawings: allStores.historyStore.getDrawings\r\n}))\r\n@observer\r\nclass GameCanvas extends Component {\r\n\r\n    @observable pressed = false;\r\n\r\n    @observable x = null;\r\n\r\n    @observable y = null;\r\n\r\n    @observable canvas = undefined;\r\n\r\n    componentDidMount() {\r\n        this.canvas = this.refs.canvas\r\n        this.canvas.width = 1024;\r\n        this.canvas.height = 1024;\r\n\r\n        this.props.socket.on('incomingUpdates', (x, y, isNewLine, color) => {\r\n            if (this.props.currentPlayers[0] === this.props.currentUser.userName) {\r\n                this.props.updateSequence(x, y, isNewLine, color);\r\n            }\r\n            this.draw(x, y, isNewLine, color);\r\n        })\r\n\r\n        this.props.socket.on('yourTurn', () => {\r\n            this.props.startTurn(\"drawing\");\r\n        })\r\n\r\n        this.props.socket.on('finish', (drawing) => {\r\n            this.props.stopTimer()\r\n            this.props.setGameState(true);\r\n            this.props.getDrawings(this.props.currentUser.userName);\r\n            this.props.finalProductSet(drawing.sequences, \"drawing\");\r\n        })\r\n    }\r\n\r\n    draw = (x, y, newLine, color) => {\r\n        const ctx = this.canvas.getContext('2d');\r\n        if (newLine) {\r\n            ctx.closePath();\r\n            ctx.beginPath();\r\n            ctx.moveTo(x, y);\r\n        }\r\n        ctx.strokeStyle = color;\r\n        ctx.arc(x, y, 0.25, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    mouseMove = (e) => {\r\n        if (!this.props.yourTurn) return;\r\n        this.getPos(e);\r\n        if (this.pressed) {\r\n            this.props.update(this.x, this.y, false);\r\n        }\r\n\r\n    }\r\n\r\n    @action mouseDown = (e) => {\r\n        this.pressed = true;\r\n        this.getPos(e)\r\n        if (this.props.yourTurn) this.props.update(this.x, this.y, true, this.props.color);\r\n    }\r\n\r\n    @action mouseUp = () => {\r\n        this.pressed = false;\r\n    }\r\n\r\n    @action getPos = (e) => {\r\n        const canvas = this.refs.canvas;\r\n        const bounds = canvas.getBoundingClientRect();\r\n        this.x = e.pageX - bounds.left;\r\n        this.y = e.pageY - bounds.top;\r\n\r\n        this.x /= bounds.width;\r\n        this.y /= bounds.height;\r\n\r\n        this.x *= canvas.width;\r\n        this.y *= canvas.height;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: this.props.gameinProgress ? \"block\" : \"none\" }}>\r\n                <canvas onTouchMove={this.mouseMove} onTouchEnd={this.mouseUp} onTouchStart={this.mouseDown} onMouseMove={this.mouseMove} onMouseUp={this.mouseUp} onMouseDown={this.mouseDown} ref=\"canvas\" />\r\n                <ColorPallete />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default GameCanvas;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport '../styles/canvas.css'\r\nimport '../styles/storyScreen.css'\r\nimport '../styles/btn.css'\r\n\r\n@inject(allStores => ({\r\n    socket: allStores.usersStore.socket,\r\n    getPlayers: allStores.usersStore.getPlayers,\r\n    yourTurn: allStores.usersStore.yourTurn,\r\n    startTurn: allStores.usersStore.startTurn,\r\n    finalProductSet: allStores.usersStore.finalProductSet,\r\n    getStories: allStores.historyStore.getStories,\r\n    currentUser: allStores.usersStore.currentUser,\r\n    pass: allStores.usersStore.pass\r\n}))\r\n\r\n@observer\r\nclass StoryScreen extends Component {\r\n\r\n    @observable displayError = \"\";\r\n\r\n    @observable timout = undefined;\r\n\r\n    @observable canvas = null;\r\n\r\n    yPositions = 50;\r\n\r\n    @observable sentenceInp = \"\";\r\n\r\n    @observable keyInp = \"\";\r\n\r\n    @observable previosKey = \"\";\r\n\r\n    @observable userName = this.props.currentUser.userName\r\n\r\n    componentDidMount() {\r\n        this.canvas = this.refs.canvas\r\n        this.canvas.width = 1024;\r\n        this.canvas.height = 1024;\r\n\r\n        this.props.socket.on('nextTurn', (key) => {\r\n            this.props.startTurn('story')\r\n            this.showKey(key);\r\n        })\r\n\r\n        this.props.socket.on('userJoined', (arr) => {\r\n            this.props.getPlayers(arr)\r\n        })\r\n\r\n        this.props.socket.on('finish', (story) => {\r\n            this.props.finalProductSet(story.text, \"story\");\r\n            this.props.getStories(this.userName)\r\n        })\r\n    }\r\n\r\n    showKey = (key) => {\r\n        let ctx = this.canvas.getContext(\"2d\")\r\n        ctx.font = \"10pt appFont\";\r\n        ctx.fillText(key, 10, this.yPositions);\r\n        this.previosKey = key;\r\n    }\r\n\r\n    handleInpt = (e) => {\r\n        this[e.target.name] = e.target.value;\r\n    }\r\n\r\n    @action send = () => {\r\n        if (!this.props.yourTurn) {\r\n            this.displayError = \"its not your turn\"\r\n            this.timout = setTimeout(() => {\r\n                this.displayError = \"\"\r\n            }, 2000);\r\n        } else {\r\n            let ctx = this.canvas.getContext(\"2d\")\r\n            ctx.font = \"10pt appFont\";\r\n            ctx.fillText(\" \" + this.sentenceInp, 35, this.yPositions);\r\n            this.yPositions += 30;\r\n            \r\n            this.props.socket.emit('updateStory', (this.previosKey + \" \" + this.sentenceInp), this.keyInp);\r\n            this.props.pass();\r\n            this.sentenceInp = \"\";\r\n            this.keyInp = \"\";\r\n            this.previosKey = \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span>{this.displayError}</span>\r\n                <div style={{ display: this.props.gameinProgress ? \"block\" : \"none\" }}>\r\n                    <canvas ref=\"canvas\" className=\"crawley-font\" />\r\n                    <div className=\"text-area\">\r\n                        <input className=\"sentence\" value={this.sentenceInp} onChange={this.handleInpt} name=\"sentenceInp\" placeholder=\"write you sentence\" /><br/>\r\n                        <input className=\"keyword\" value={this.keyInp} onChange={this.handleInpt} name=\"keyInp\" placeholder=\"write the key word for the next player\" />\r\n                        \r\n                        <div className=\"btn-holder btn-holder-send\" onClick={this.send}>\r\n                            <div className=\"button button-send\">\r\n                                <p className=\"btnText\">send</p>\r\n                                <div className=\"btnTwo\">\r\n                                    <p className=\"btnText2\">\r\n                                        <div className=\"send-img\"></div>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default StoryScreen;","import React, { Component } from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../styles/popup.css';\r\nimport '../styles/sendInvite.css'\r\n\r\n@inject(allStores => ({\r\n    socket: allStores.usersStore.socket,\r\n    invite: allStores.usersStore.invite,\r\n}))\r\n@observer\r\nclass SendInvite extends Component {\r\n\r\n    @observable username = \"\";\r\n\r\n    @action handleInput = (e) => {\r\n        this[e.target.name] = e.target.value;\r\n    }\r\n\r\n    @action send = () => {\r\n        this.props.inv();\r\n        this.props.invite(this.username);\r\n        this.username = \"\";\r\n    }\r\n\r\n    @action cancle = () => {\r\n        this.props.inv();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ visibility: this.props.bool ? \"visible\" : \"hidden\" }} className=\"popup\">\r\n                <div className=\"modal-content\">\r\n                    <h4>Invite a freind to play:</h4>\r\n                    <input className=\"invite\" onChange={this.handleInput} value={this.username} type=\"text\" name=\"username\" placeholder=\"Username\" />\r\n\r\n                    <div className=\"btn-holder btn-holder-invite\" onClick={this.send}>\r\n                        <div className=\"button\">\r\n                            <p className=\"btnText\">SEND INVITE</p>\r\n                            <div className=\"btnTwo\">\r\n                                <p className=\"btnText2\">\r\n                                    <div className=\"send-inv-img\"></div>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"btn-holder btn-holder-invite\" onClick={this.cancle}>\r\n                        <div className=\"button cancle\">\r\n                            <p className=\"btnText\">CANCLE</p>\r\n                            <div className=\"btnTwo cancle2\">\r\n                                <p className=\"btnText2\">\r\n                                    <div className=\"cancle-img\"></div>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendInvite;","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { observable, action } from 'mobx';\r\nimport GameResults from './GameResults'\r\nimport '../styles/gameScreen.css';\r\nimport GameCanvas from './GameCanvas';\r\nimport StoryScreen from './StoryScreen';\r\nimport SendInvite from './SendInviteModal';\r\n\r\n@inject(allStores => ({\r\n    start: allStores.usersStore.start,\r\n    finish: allStores.usersStore.finish,\r\n    currentPlayers: allStores.usersStore.currentPlayers,\r\n    socket: allStores.usersStore.socket,\r\n    pass: allStores.usersStore.pass,\r\n    currentUser: allStores.usersStore.currentUser,\r\n    yourTurn: allStores.usersStore.yourTurn,\r\n    timer: allStores.usersStore.timer,\r\n    finalProduct: allStores.usersStore.finalProduct,\r\n    resetVariables: allStores.usersStore.resetVariables,\r\n    themeWord: allStores.usersStore.word,\r\n    startGame: allStores.usersStore.startGame,\r\n    gameinProgress: allStores.usersStore.gameinProgress,\r\n    getPlayers: allStores.usersStore.getPlayers,\r\n}))\r\n\r\n@observer\r\nclass GameScreen extends Component {\r\n    @observable gameEnded = false;\r\n    @observable bool = false;\r\n\r\n    componentDidMount() {\r\n        this.props.socket.on('start', () => {\r\n            this.props.startGame()\r\n            this.gameEnded = false;\r\n        })\r\n\r\n        this.props.socket.on('userJoined', (arr) => {\r\n            this.props.getPlayers(arr)\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.socket.emit('leaveRoom');\r\n    }\r\n\r\n    @action invite = () => {\r\n        this.bool = this.bool ? false : true;\r\n    }\r\n\r\n    start = () => {\r\n        this.props.start();\r\n    }\r\n\r\n    finish = () => {\r\n        // this.gameinProgress = false;\r\n        this.props.finish(this.props.match.params.gameType);\r\n    }\r\n\r\n    setGameState = (bool) => {\r\n        this.gameEnded = bool;\r\n    }\r\n\r\n    pass = () => {\r\n        this.props.pass();\r\n    }\r\n\r\n    renderGameBoard = (gameType) => {\r\n        switch (gameType) {\r\n            case \"drawing\":\r\n                return <GameCanvas setGameState={this.setGameState} gameinProgress={this.props.gameinProgress} />\r\n            case \"story\":\r\n                return <StoryScreen setGameState={this.setGameState} gameinProgress={this.props.gameinProgress} />\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"game-screen\">\r\n                {(this.props.finalProduct) ? <GameResults gameType={this.props.match.params.gameType} /> : null}\r\n                <div className=\"game-info\">\r\n\r\n                    {this.props.gameinProgress ?\r\n                        <div className=\"themeWord-title\">\r\n                            <h4>Your theme word is:</h4>\r\n                            {this.props.themeWord}\r\n                            {\r\n                                this.props.yourTurn ?\r\n                                    <div>\r\n                                        <h4 className=\"indicator\">Your Turn!</h4>\r\n                                        <span>{(this.props.match.params.gameType === \"drawing\") ? this.props.timer : null}</span>\r\n                                        <div className=\"btn-holder\" onClick={this.pass} style={{ display: this.props.match.params.gameType === \"story\" ? \"none\" : \"block\" }}>\r\n                                            <div className=\"button\">\r\n                                                <p className=\"btnText\">PASS</p>\r\n                                                <div className=\"btnTwo\">\r\n                                                    <p className=\"btnText2\">\r\n                                                        <div className=\"pass-img\"></div>\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div> :\r\n                                    null\r\n                            }\r\n                        </div> :\r\n\r\n                        <h2 className=\"themeWord-title\">LET THE NONSENSE BEGIN!</h2>\r\n                    }\r\n\r\n                    <div className=\"players\">\r\n                        <h4>PLAYERS:</h4>\r\n\r\n                        {this.props.currentPlayers.map(p => {\r\n                            if (p === this.props.currentUser.userName) {\r\n                                return <p key={p}>{p} (Me)</p>\r\n                            }\r\n                            return <p key={p}>{p}</p>\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                    <div style={{ display: (this.props.currentPlayers[0] === this.props.currentUser.userName) ? \"block\" : \"none\" }} classNane=\"start-finish\">\r\n                        {\r\n                            this.props.gameinProgress ?\r\n                                <div className=\"game-btns\">\r\n                                    <div className=\"btn-holder\" onClick={this.finish}>\r\n                                        <div className=\"button cancle\">\r\n                                            <p className=\"btnText\">FINISH</p>\r\n                                            <div className=\"btnTwo cancle2\">\r\n                                                <p className=\"btnText2\">\r\n                                                    <div className=\"finish-img\"></div>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <button onClick={this.finish} className=\"finish start-fin-btn\">FINISH</button> */}\r\n                                </div> :\r\n                                <div className=\"game-btns\">\r\n                                    <div className=\"btn-holder\" onClick={this.invite}>\r\n                                        <div className=\"button\">\r\n                                            <p className=\"btnText\">INVITE</p>\r\n                                            <div className=\"btnTwo\">\r\n                                                <p className=\"btnText2\">\r\n                                                    <div className=\"invite-img\"></div>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <button onClick={this.invite} className=\"invite start-fin-btn\" >Invite</button> */}\r\n\r\n                                    <div className=\"btn-holder\" onClick={this.start}>\r\n                                        <div className=\"button accept\">\r\n                                            <p className=\"btnText\">START</p>\r\n                                            <div className=\"btnTwo accept2\">\r\n                                                <p className=\"btnText2\">\r\n                                                    <div className=\"start-img\"></div>\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/* <button onClick={this.start} className=\"start start-fin-btn\" >Start</button> */}\r\n                                </div>\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"game-board\">\r\n                    {this.renderGameBoard(this.props.match.params.gameType)}\r\n                </div>\r\n                <SendInvite bool={this.bool} inv={this.invite} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameScreen;","import React, { Component } from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport { Link } from 'react-router-dom'\r\nimport '../styles/popup.css';\r\nimport '../styles/getInvite.css';\r\n\r\n@inject(allStores => ({\r\n    socket: allStores.usersStore.socket,\r\n    setType: allStores.usersStore.setType,\r\n    gameType: allStores.usersStore.gameType,\r\n    getPlayers: allStores.usersStore.getPlayers,\r\n    gameinProgress: allStores.usersStore.gameinProgress\r\n}))\r\n@observer\r\nclass InviteModal extends Component {\r\n\r\n    @observable pending = false;\r\n\r\n    @observable invite = {\r\n        userName: null,\r\n        room: null,\r\n    }\r\n\r\n    @action recieveInvite = (userName, roomId, roomType) => {\r\n        this.invite.userName = userName;\r\n        this.invite.room = roomId;\r\n        this.props.setType(roomType);\r\n        this.pending = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.socket.on('gotInvite', (userName, roomId, roomType) => {\r\n            if (!this.props.gameinProgress) {\r\n                this.recieveInvite(userName, roomId, roomType);\r\n            }\r\n        })\r\n    }\r\n\r\n    @action accept = () => {\r\n        console.log(this.props.gameType)\r\n        this.props.socket.emit('joinRoom', this.props.gameType, this.invite.room);\r\n        this.pending = false;\r\n        this.invite = {\r\n            userName: null,\r\n            room: null\r\n        }\r\n\r\n    }\r\n\r\n    @action decline = () => {\r\n        this.pending = false;\r\n        this.invite = {\r\n            userName: null,\r\n            room: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ visibility: this.pending ? \"visible\" : \"hidden\" }} className=\"popup\">\r\n                <div className=\"modal-content\">\r\n                    <h5>{this.invite.userName} Has invited you!</h5>\r\n\r\n                    <div className=\"btn-holder btn-holder-invite\" onClick={this.accept}>\r\n                        <Link to={'/game/' + this.props.gameType} >\r\n                            <div className=\"button accept\">\r\n                                <p className=\"btnText\">ACCEPT</p>\r\n                                <div className=\"btnTwo accept2\">\r\n                                    <p className=\"btnText2\">\r\n                                        <div className=\"accept-img\"></div>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"btn-holder btn-holder-invite\" onClick={this.decline}>\r\n                        <div className=\"button cancle\">\r\n                            <p className=\"btnText\">DECLINE</p>\r\n                            <div className=\"btnTwo cancle2\">\r\n                                <p className=\"btnText2\">\r\n                                    <div className=\"cancle-img\"></div>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InviteModal;","import React, { Component } from 'react';\r\nimport { observable, action } from 'mobx';\r\nimport { observer, inject } from 'mobx-react';\r\nimport '../styles/popup.css';\r\nimport '../styles/login.css';\r\nimport '../styles/btn.css';\r\n\r\n@inject(allStores => ({\r\n    loginValidate: allStores.usersStore.validateLogin,\r\n    signup: allStores.usersStore.signUp,\r\n    socket: allStores.usersStore.socket,\r\n    logIn: allStores.usersStore.logIn,\r\n    currentUser: allStores.usersStore.currentUser\r\n\r\n}))\r\n@observer\r\nclass Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.socket.on(\"login\", (user) => {\r\n            this.props.logIn(user);\r\n        })\r\n\r\n        this.props.socket.on(\"wrong user\", () => {\r\n            this.currentMessage = \"wrong Username or Password!\";\r\n        })\r\n\r\n        this.props.socket.on('you are already logged In', () => {\r\n            this.currentMessage = \"this user is already logged in\";\r\n        })\r\n    }\r\n\r\n    displayMessage = () => {\r\n        if (this.currentMessage) return <div id=\"error\">{this.currentMessage}</div>\r\n    }\r\n\r\n    @observable currentMessage = null;\r\n    @observable loginUsername = \"\";\r\n    @observable loginPassword = \"\";\r\n    @observable singupUsername = \"\";\r\n    @observable singupPassword = \"\";\r\n    @observable confirmPassword = \"\";\r\n\r\n    @action handleInput = (e) => {\r\n        this[e.target.name] = e.target.value\r\n    }\r\n\r\n    signUp = () => {\r\n        if (this.confirmPassword !== this.singupPassword) {\r\n            this.currentMessage = \"password needs to be repeated!\";\r\n            return;\r\n        }\r\n        this.props.signup({\r\n            userName: this.singupUsername,\r\n            password: this.singupPassword\r\n        });\r\n    }\r\n\r\n    login = () => {\r\n        this.props.loginValidate({\r\n            userName: this.loginUsername,\r\n            password: this.loginPassword\r\n        });\r\n    }\r\n\r\n    @action validity = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: this.props.currentUser ? \"none\" : \"block\" }} className=\"popup\" id=\"login-popup\">\r\n                <div className=\"modal-content\" id=\"login-content\">\r\n                    <h2 className=\"welcome\">Welcome to the NONSENSE land!</h2>\r\n                    <div id=\"login\">\r\n                        <h4>Log in:</h4>\r\n                        <div className=\"input-field\">Username <br /><input type=\"text\" name=\"loginUsername\" value={this.loginUsername} onChange={this.handleInput} /></div>\r\n                        <div className=\"input-field\">Password <br /><input type=\"password\" name=\"loginPassword\" value={this.loginPassword} onChange={this.handleInput} /></div>\r\n\r\n                        <div className=\"btn-holder\" onClick={this.login}>\r\n                            <div className=\"button\">\r\n                                <p className=\"btnText\">LOG IN</p>\r\n                                <div className=\"btnTwo\">\r\n                                    <p className=\"btnText2\">\r\n                                        <div className=\"login-img\"></div>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"singup\">\r\n                        <h4>Sign up:</h4>\r\n                        <div className=\"input-field\">Username <br /><input type=\"text\" name=\"singupUsername\" value={this.singupUsername} onChange={this.handleInput} /></div>\r\n                        <div className=\"input-field\">Password <br /><input type=\"password\" name=\"singupPassword\" value={this.singupPassword} onChange={this.handleInput} /></div>\r\n                        <div className=\"input-field\">Repeat Password <br /><input type=\"password\" name=\"confirmPassword\" value={this.confirmPassword} onChange={this.handleInput} /></div>\r\n\r\n                        <div className=\"btn-holder\" onClick={this.signUp}>\r\n                            <div className=\"button\">\r\n                                <p className=\"btnText\">SING UP</p>\r\n                                <div className=\"btnTwo\">\r\n                                    <p className=\"btnText2\">\r\n                                        <div className=\"sing-img\"></div>\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {this.displayMessage()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom'\r\nimport './App.css';\r\nimport { inject } from 'mobx-react';\r\nimport Home from './components/Home';\r\nimport History from './components/History';\r\nimport GameScreen from './components/GameScreen';\r\nimport InviteModal from './components/InviteModal';\r\nimport Login from './components/Login';\r\n\r\n@inject(allStores => ({\r\n  logOut: allStores.usersStore.logOut,\r\n  currentUser: allStores.usersStore.currentUser,\r\n}))\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <ul id=\"navbar\">\r\n            <li className=\"navbar-text\">NONSENSE</li>\r\n            <li className=\"navbar-btn\">\r\n              <Link to=\"/\">HOME</Link>\r\n            </li>\r\n            <li className=\"navbar-text\">\r\n              {this.props.currentUser ? \"Welcome \" + this.props.currentUser.userName : null}\r\n            </li>\r\n            <li className=\"navbar-btn logout\" onClick={this.props.logOut}><Link to=\"/\">Log out</Link></li>\r\n            <li className=\"navbar-btn history\">\r\n              <Link to=\"/history\">HISTORY</Link>\r\n            </li>\r\n            <InviteModal />\r\n          </ul>\r\n\r\n          <Login />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/history\" render={() => <History />} />\r\n          <Route exact path=\"/game/:gameType\" render={({ match }) => <GameScreen match={match} />} />\r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { observable, action } from \"mobx\";\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\n\r\nclass UsersStore {\r\n    @observable currentUser = null;\r\n\r\n    @observable socket = io.connect();\r\n\r\n    @observable currentPlayers = [];\r\n\r\n    @observable gameType = null;\r\n\r\n    @observable yourTurn = false;\r\n\r\n    @observable timeOut = undefined;\r\n\r\n    @observable finalProduct = undefined;\r\n\r\n    @observable sequences = [];\r\n\r\n    @observable color = \"rgba(0, 0, 0, 1)\";\r\n\r\n    @observable word = undefined;\r\n\r\n    @observable gameinProgress = false;\r\n\r\n    @observable gameType = undefined;\r\n\r\n    @observable timer = 15;\r\n\r\n    @action startGame = () => {\r\n        this.gameinProgress = true;\r\n    }\r\n\r\n    @action finalProductSet = (finalProduct, gameType) => {\r\n        this.finalProduct = finalProduct;\r\n        this.gameType = gameType;\r\n    }\r\n\r\n    @action saveTheme = (word) => {\r\n        this.word = word;\r\n    }\r\n\r\n    @action changeColor = (color) => {\r\n        this.color = color;\r\n    }\r\n\r\n    @action updateSequence = (x, y, isNewLine, color) => {\r\n        this.sequences.push({\r\n            x: x,\r\n            y: y,\r\n            isNewLine: isNewLine,\r\n            color: color\r\n        });\r\n    }\r\n\r\n    @action countDown = () => {\r\n        if (this.timer === 0) {\r\n            this.pass();\r\n        }\r\n        else {\r\n            this.timeOut = setTimeout(this.countDown, 1000);\r\n            this.timer--;\r\n        }\r\n    }\r\n\r\n    @action startTurn = (gameType) => {\r\n        this.yourTurn = true;\r\n        if (gameType === \"drawing\") {\r\n            this.timer = 15;\r\n            this.countDown();\r\n        }\r\n    }\r\n\r\n    @action update = (x, y, isNewLine) => {\r\n        this.socket.emit('updateDrawing', x, y, isNewLine, this.color);\r\n    }\r\n\r\n    @action pass = () => {\r\n        clearTimeout(this.timeOut);\r\n        this.socket.emit('pass');\r\n        this.yourTurn = false;\r\n    }\r\n\r\n    @action getPlayers = (arr) => {\r\n        this.currentPlayers = arr;\r\n    }\r\n\r\n    @action signUp = (user) => {\r\n        axios.post('/api/user', user).then((user) => {\r\n            if (!user.data) {\r\n                console.log(\"username already in use!\");\r\n            } else {\r\n                this.validateLogin(user.data);\r\n            }\r\n        })\r\n    }\r\n\r\n    @action setType = (type) => {\r\n        this.gameType = type;\r\n    }\r\n\r\n    @action validateLogin = (user) => {\r\n        this.socket.emit('validateLogin', user, this.socket.id);\r\n    }\r\n\r\n    @action logIn = (user) => {\r\n        this.currentUser = user;\r\n    }\r\n\r\n    newRoom = (gametype) => {\r\n        this.setType(gametype);\r\n        switch (gametype) {\r\n            case \"drawing\":\r\n                this.newDrawing();\r\n                break;\r\n            case \"story\":\r\n                this.newStory();\r\n                break;\r\n            default: return null;\r\n        }\r\n    }\r\n\r\n    newDrawing = () => {\r\n        axios.post('/api/drawing/opendrawing', { userName: this.currentUser.userName }).then((drawing) => {\r\n            this.socket.emit('newRoom', drawing.data._id, \"drawing\");\r\n        })\r\n    }\r\n\r\n    newStory = () => {\r\n        axios.post('/api/story/openstory', { userName: this.currentUser.userName }).then((story) => {\r\n            this.socket.emit('newRoom', story.data._id, \"story\");\r\n        })\r\n    }\r\n\r\n    @action start = () => {\r\n        this.socket.emit('start');\r\n\r\n    }\r\n\r\n    finish = (gameType) => {\r\n        this.socket.emit('finish', gameType, this.sequences);\r\n    }\r\n\r\n    stopTimer = () => {\r\n        clearTimeout(this.timeOut);\r\n    }\r\n\r\n    invite = (userName) => {\r\n        this.socket.emit('sendInvite', userName, this.gameType);\r\n    }\r\n\r\n    @action finalize = () => {\r\n        this.currentPlayers = [];\r\n        this.gameType = null;\r\n        this.yourTurn = false;\r\n        this.sequences = []\r\n        this.gameinProgress = false;\r\n        this.finalProduct = undefined;\r\n        this.yourTurn = false;\r\n        this.color = \"rgba(0, 0, 0, 1)\";\r\n        this.stopTimer()\r\n        // this.socket.emit('finalize');\r\n    }\r\n\r\n    @action logOut = () => {\r\n        clearTimeout(this.timeOut);\r\n        this.currentPlayers = [];\r\n        this.currentUser = null;\r\n        this.socket.emit('logOut');\r\n    }\r\n}\r\n\r\nconst usersStore = new UsersStore();\r\n\r\nexport default usersStore;","import { observable, action } from \"mobx\";\r\nimport axios from 'axios'\r\n\r\nclass HistoryStore {\r\n    @observable drawings = [];\r\n\r\n    @observable stories = [];\r\n\r\n    @observable itemToDisplay = null;\r\n\r\n    @observable gameType = null;\r\n\r\n    @action getDrawings = (userName) => {\r\n        axios.get('/api/drawing/' + userName).then((drawings) => {\r\n            this.drawings = drawings.data;\r\n        })\r\n    }\r\n\r\n    @action getStories = (userName) => {\r\n        axios.get('/api/story/' + userName).then((stories) => {\r\n            this.stories = stories.data;\r\n        })\r\n    }\r\n\r\n    @action setType = (type) => {\r\n        this.gameType = type;\r\n    }\r\n\r\n    @action displayPopup = (itemToDisplay, gameType) => {\r\n        this.itemToDisplay = itemToDisplay;\r\n        \r\n        if (!this.gameType) {\r\n            this.gameType = gameType\r\n        }\r\n        else {\r\n            this.gameType = null;\r\n        }\r\n    }\r\n}\r\n\r\nconst historyStore = new HistoryStore();\r\n\r\nexport default historyStore;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'mobx-react'\r\nimport usersStore from './js/usersStore'\r\nimport historyStore from './js/historyStore'\r\n\r\nReactDOM.render(\r\n    <Provider usersStore={usersStore} historyStore={historyStore}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}